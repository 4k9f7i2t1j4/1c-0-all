Перем Строка Экспорт;
Перем Колонка Экспорт;
Перем Обл Экспорт;
Перем Изделие Экспорт;
Перем КоличествоЭтикеток Экспорт;
Перем ПорядокОбщий;

Функция Печать() Экспорт 
	
	ТабДокумент = ПечатьШТА();
	Возврат ТабДокумент;
	
КонецФункции // Печать

Функция ПечатьШТА() Экспорт 
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ПолеСверху = 0;
	ТабДокумент.ПолеСлева = 0;
	ТабДокумент.ПолеСнизу = 0;
	ТабДокумент.ПолеСправа = 0;
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.ВерхнийКолонтитул.Выводить = Ложь;
	ТабДокумент.НижнийКолонтитул.Выводить = Ложь;
	
	ПереводКареткиПечати(ТабДокумент);
	
	Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда 
		ЕслиПоступлениеТоваровУслуг(ТабДокумент);
	ИначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ОтложенныйТовар") Тогда 
		ЕслиОтложенныйТовар(ТабДокумент);
	ИначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ЗаказПоставщикуСборный") Тогда 
		ЕслиЗПС(ТабДокумент);
	КонецЕсли;	
	
	Возврат ТабДокумент;

КонецФункции 

Процедура ВывестиОбщийМакет(Выборка, ТабДокумент, Порядок, Стр) Экспорт 
	Прификс = "_";
	Структура = Расположение(Порядок);	
	Макет = ПолучитьМакет(Прификс+Структура.ВысотаНаЛисте+Структура.Долгота);
	Область = Макет.ПолучитьОбласть("Обл");
	Пока Выборка.Следующий() Цикл  
		ТипКода = УправлениеРозничнойТорговлей.ПолучитьЗначениеТипаШтрихкодаДляЭУ(Выборка.ТипШтрихкода);
		Если ТипКода = 3 Тогда
			Если РаботаСТорговымОборудованием.ПроверитьШтрихКод(Выборка.Штрихкод, Выборка.ТипШтрихкода) Тогда
				// ХЗ что-это ниже и зачем было нужно, но закоментил и всё заработало
				//Область.Рисунки.Code39.Объект.ТипКода = ТипКода;
				//Область.Рисунки.Code39.Объект.ОтображатьТекст  = Ложь;
				//Область.Рисунки.Code39.Объект.ТекстКода  = Выборка.Штрихкод;
				//Область.Рисунки.Code39.Объект.Сообщение = Выборка.Штрихкод;
			КонецЕсли;
		ИначеЕсли ТипКода = -1 и Выборка.ТипШтрихкода.Код = "00000000006" Тогда 
			//Область.Рисунки.QR.Объект.barcode =Выборка.Штрихкод+" "+"https://fluid-line.ru/"+" "+Выборка.Ссылка.Артикул;
			Область.Рисунки.QR.Объект.barcode =Выборка.Штрихкод+" "+Выборка.Ссылка.Артикул;
		КонецЕсли;
	КонецЦикла;
	Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ОтложенныйТовар") Тогда 
		Область.Параметры.Текст = "Клиент: "+Стр.Контрагент+Символы.ПС+"Счет №: "+Формат(Число(Прав(Стр.Номер,9)),"ЧГ=0")+Символы.ПС+"Отложили: "+Стр.Отложено;
	ИначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда 
		Область.Параметры.Текст = ?(ПустаяСтрока(Стр.ИзделиеСчет),"","Для: "+Стр.ИзделиеСчет+Символы.ПС)
								 +?(ЗначениеЗаполнено(Стр.ЗаказНаш) и ТипЗнч(Стр.ЗаказНаш) = Тип("ДокументСсылка.ЗаказПокупателя"),
										 "Счет №: "+Формат(Число(Прав(Стр.Номер,9)),"ЧГ=0"),"")
										 +Символы.ПС
								 +?(ПустаяСтрока(Стр.Контрагент),"",""+Стр.Контрагент+Символы.ПС)
								 +"Кол-во: "+Стр.Количество+Символы.ПС
								 +""+Стр.НомерЗаказа+Символы.ПС
								 +""+ПолучитьМестаХраненияВСтроке(Стр.Номенклатура);
		
	ИначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ЗаказПоставщикуСборный") Тогда 
		Область.Параметры.Текст = ?(ПустаяСтрока(Стр.ИзделиеСчет),"","Для: "+Стр.ИзделиеСчет+Символы.ПС)
								 +?(ЗначениеЗаполнено(Стр.ЗаказНаш) и ТипЗнч(Стр.ЗаказНаш) = Тип("ДокументСсылка.ЗаказПокупателя"),
										 "Счет №: "+Формат(Число(Прав(Стр.Номер,9)),"ЧГ=0"),"")
										 +Символы.ПС
								 //+?(ПустаяСтрока(Стр.Контрагент),"",""+Стр.Контрагент+Символы.ПС)
								 +"Кол-во: "+Стр.Количество+Символы.ПС
								 +""+Стр.НомерЗаказа+Символы.ПС
								 +""+ПолучитьМестаХраненияВСтроке(Стр.Номенклатура);
	КонецЕсли;
	Область.Параметры.Артикул = Выборка.Ссылка.НаименованиеПолное;
	Если Структура.Долгота = 1 Тогда
		Обл = новый ТабличныйДокумент;
		Обл.Присоединить(Область.ПолучитьОбласть(1, 1, Область.ВысотаТаблицы, Область.ШиринаТаблицы));
	ИначеЕсли Структура.Долгота = 2 Тогда 
		Обл.Присоединить(Область.ПолучитьОбласть(1, 1, Область.ВысотаТаблицы, Область.ШиринаТаблицы));
	ИначеЕсли Структура.Долгота = 3 Тогда 
		Обл.Присоединить(Область.ПолучитьОбласть(1, 1, Область.ВысотаТаблицы, Область.ШиринаТаблицы));
		ТабДокумент.Вывести(Обл.ПолучитьОбласть(1, 1, Обл.ВысотаТаблицы, Обл.ШиринаТаблицы));
		Обл = Неопределено;
		Если Структура.ВысотаНаЛисте = 3 Тогда 
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура ВывестиНашМакет(Выборка, ТабДокумент, Порядок, Стр) Экспорт 
	Прификс = "_1";
	Структура = Расположение(Порядок);	
	Макет = ПолучитьМакет(Прификс+Структура.ВысотаНаЛисте+Структура.Долгота);
	Область = Макет.ПолучитьОбласть("Обл");
	//Область.Рисунки.QR.Объект.barcode = Выборка.Штрихкод+" "+"https://fluid-line.ru/"+" "+Выборка.Ссылка.Артикул;
	Область.Рисунки.QR.Объект.barcode = Выборка.Штрихкод+" "+Выборка.Ссылка.Артикул;
	Область.Параметры.Артикул = Выборка.Ссылка.НаименованиеПолное;
	Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ОтложенныйТовар") Тогда 
		Область.Параметры.Текст = "Клиент: "+Стр.Контрагент+Символы.ПС
								 +"Счет №: "+Формат(Число(Прав(Стр.Номер,9)),"ЧГ=0")+Символы.ПС
								 +"Отложили: "+Стр.Отложено;
	ИначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда 
		Область.Параметры.Текст = ?(ПустаяСтрока(Стр.ИзделиеСчет),"","Для: "+Стр.ИзделиеСчет+Символы.ПС)
								 +?(ЗначениеЗаполнено(Стр.ЗаказНаш) и ТипЗнч(Стр.ЗаказНаш) = Тип("ДокументСсылка.ЗаказПокупателя"),
										 "Счет №: "+Формат(Число(Прав(Стр.Номер,9)),"ЧГ=0"),"")
										 +Символы.ПС
								 +?(ПустаяСтрока(Стр.Контрагент),"",""+Стр.Контрагент+Символы.ПС)
								 +"Кол-во: "+Стр.Количество+Символы.ПС
								 +""+Стр.НомерЗаказа+Символы.ПС
								 +""+ПолучитьМестаХраненияВСтроке(Стр.Номенклатура);
			
			
	ИначеЕсли ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.ЗаказПоставщикуСборный") Тогда 
		Область.Параметры.Текст = ?(ПустаяСтрока(Стр.ИзделиеСчет),"","Для: "+Стр.ИзделиеСчет+Символы.ПС)
								 +?(ЗначениеЗаполнено(Стр.ЗаказНаш) и ТипЗнч(Стр.ЗаказНаш) = Тип("ДокументСсылка.ЗаказПокупателя"),
										 "Счет №: "+Формат(Число(Прав(Стр.Номер,9)),"ЧГ=0"),"")
										 +Символы.ПС
								 //+?(ПустаяСтрока(Стр.Контрагент),"",""+Стр.Контрагент+Символы.ПС)
								 +"Кол-во: "+Стр.Количество+Символы.ПС
								 +""+Стр.НомерЗаказа+Символы.ПС
								 +""+ПолучитьМестаХраненияВСтроке(Стр.Номенклатура);
	КонецЕсли;
	Если Структура.Долгота = 1 Тогда 
		Обл = новый ТабличныйДокумент;
		Обл.Присоединить(Область.ПолучитьОбласть(1, 1, Область.ВысотаТаблицы, Область.ШиринаТаблицы));
	ИначеЕсли Структура.Долгота = 2 Тогда
		Обл.Присоединить(Область.ПолучитьОбласть(1, 1, Область.ВысотаТаблицы, Область.ШиринаТаблицы));
	ИначеЕсли Структура.Долгота = 3 Тогда
		Обл.Присоединить(Область.ПолучитьОбласть(1, 1, Область.ВысотаТаблицы, Область.ШиринаТаблицы));
		ТабДокумент.Вывести(Обл.ПолучитьОбласть(1, 1, Обл.ВысотаТаблицы, Обл.ШиринаТаблицы));
		Обл = Неопределено;
		Если Структура.ВысотаНаЛисте = 3 Тогда 
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

функция Расположение(Порядок) Экспорт 
	Структура = Новый Структура;
	Структура.Вставить("НомерЛиста", Окр(Порядок/21+0.5,0,РежимОкругления.Окр15как10));
	Структура.Вставить("НомерЯчейкиНаЛисте", Порядок - 21 * (Структура.НомерЛиста-1));
	Структура.Вставить("ВысотаНаЛисте", Окр(Структура.НомерЯчейкиНаЛисте/3+0.5,0,РежимОкругления.Окр15как10));
	Структура.Вставить("Долгота", Структура.НомерЯчейкиНаЛисте - (Структура.ВысотаНаЛисте-1) * 3); 
	Если Структура.ВысотаНаЛисте = 1 или Структура.ВысотаНаЛисте = 0 Тогда 
		Структура.ВысотаНаЛисте = 1;
	ИначеЕсли Структура.ВысотаНаЛисте = 7 Тогда 
		Структура.ВысотаНаЛисте = 3;
	Иначе 
		Структура.ВысотаНаЛисте = 2;
	КонецЕсли;
	Возврат Структура;
КонецФункции

#Область ДокументыПоТипу
Функция ЕслиПоступлениеТоваровУслуг(ТабДокумент, Параметры = Неопределено) Экспорт  
	Если Параметры = Неопределено Тогда 
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Ссылка", СсылкаНаОбъект);
		Запрос.Текст = "ВЫБРАТЬ
		               |	ПоступлениеТоваровУслугТовары.Номенклатура,
		               |	ПоступлениеТоваровУслугТовары.НомерСтроки КАК НомерСтроки,
		               |	ПоступлениеТоваровУслугТовары.Количество,
		               |	ПоступлениеТоваровУслугТовары.ЗаказПоставщикуСборный.НомерЗаказа КАК НомерЗаказа,
		               |	ПоступлениеТоваровУслугТовары.Номенклатура.Артикул КАК Артикул,
		               |	ЕСТЬNULL(ПоступлениеТоваровУслугТовары.ЗаказНаш.Контрагент.Наименование, """") КАК Контрагент,
		               |	КомплектующиеНоменклатуры.Номенклатура КАК Изделие,
		               |	ПоступлениеТоваровУслугТовары.ЗаказНаш
		               |ПОМЕСТИТЬ ОкейИзделие
		               |ИЗ
		               |	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КомплектующиеНоменклатуры КАК КомплектующиеНоменклатуры
		               |		ПО ПоступлениеТоваровУслугТовары.Номенклатура = КомплектующиеНоменклатуры.Комплектующая
		               |ГДЕ
		               |	ПоступлениеТоваровУслугТовары.Ссылка = &Ссылка
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ОкейИзделие.Номенклатура,
		               |	ОкейИзделие.НомерСтроки КАК НомерСтроки,
		               |	ОкейИзделие.Количество,
		               |	ОкейИзделие.НомерЗаказа,
		               |	ОкейИзделие.Номенклатура.НаименованиеПолное КАК Артикул,
		               |	ОкейИзделие.Контрагент,
		               |	ЕСТЬNULL(ЗаказПокупателяТовары.Номенклатура.Артикул, """") КАК ИзделиеСчет,
		               |	ОкейИзделие.ЗаказНаш,
		               |	ОкейИзделие.ЗаказНаш.Номер КАК Номер
		               |ИЗ
		               |	ОкейИзделие КАК ОкейИзделие
		               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
		               |		ПО ОкейИзделие.ЗаказНаш = ЗаказПокупателяТовары.Ссылка
		               |			И ОкейИзделие.Изделие = ЗаказПокупателяТовары.Номенклатура
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	НомерСтроки";
		Выгрузка = Запрос.Выполнить().Выгрузить();
	Иначе 
		Выгрузка = Параметры;
		ПереводКареткиПечати(ТабДокумент, Выгрузка);
	КонецЕсли;
	Порядок = ПорядокОбщий;
	Для Каждого ВыборкаНоменклатура из Выгрузка Цикл		
		Отбор = Новый Структура;
		Отбор.Вставить("Номенклатура", ВыборкаНоменклатура.Номенклатура);
		//////////////////////////////////////////////
		// Возможность печатать этикетки для разного количества одинаковой номенклатуры
		
		//Отбор.Вставить("НомерСтроки", ВыборкаНоменклатура.НомерСтроки);
		Строка = КоличествоЭтикеток.НайтиСтроки(Отбор);
		//Если Строка.Количество()=1 Тогда
		Если Строка.Количество()>=1 Тогда
			
			Для нум=0 По Строка.Количество()-1 Цикл // добавил цикл
				
				//Если не Строка[0].КоличествоЭтикеток = 0 Тогда 
			Если не Строка[нум].КоличествоЭтикеток = 0 Тогда 
				
					//ВыборкаНоменклатура.Отложено = Строка[0].Количество;
					//Для i=1 по Строка[0].КоличествоЭтикеток Цикл 
				ВыборкаНоменклатура.Отложено = Строка[нум].Количество;
				Для i=1 по Строка[нум].КоличествоЭтикеток Цикл
					// код дальше без изменений...
					Порядок = Порядок + 1;
					Запрос = Новый Запрос;
					Запрос.УстановитьПараметр("Владелец", ВыборкаНоменклатура.Номенклатура);
					Запрос.Текст ="ВЫБРАТЬ
					              |	Номенклатура.Ссылка,
					              |	Штрихкоды.Штрихкод,
					              |	Штрихкоды.ТипШтрихкода
					              |ИЗ
					              |	Справочник.Номенклатура КАК Номенклатура
					              |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
					              |		ПО Номенклатура.Ссылка = Штрихкоды.Владелец
					              |ГДЕ
					              |	Номенклатура.Ссылка = &Владелец
					              |	И Штрихкоды.Штрихкод ЕСТЬ НЕ NULL ";

					Выборка = Запрос.Выполнить().Выбрать();
					Если Выборка.Количество()>1 Тогда 
						ВывестиОбщийМакет(Выборка, ТабДокумент, Порядок, ВыборкаНоменклатура);
					ИначеЕсли Выборка.Количество()=1 Тогда 
						Если Выборка.Следующий() Тогда   
							ТипКода = УправлениеРозничнойТорговлей.ПолучитьЗначениеТипаШтрихкодаДляЭУ(Выборка.ТипШтрихкода);
							Если ТипКода = 3 Тогда
								Изменения.ГенерацияНашихШтрихкодов(ВыборкаНоменклатура.Номенклатура);
								Выборка = Запрос.Выполнить().Выбрать();
								ВывестиОбщийМакет(Выборка, ТабДокумент, Порядок, ВыборкаНоменклатура);
							ИначеЕсли ТипКода = -1 и Выборка.ТипШтрихкода.Код = "00000000006" Тогда 
								ВывестиНашМакет(Выборка, ТабДокумент, Порядок, ВыборкаНоменклатура);
							КонецЕсли;
						КонецЕсли;
					Иначе
						Изменения.ГенерацияНашихШтрихкодов(ВыборкаНоменклатура.Номенклатура);
						Выборка = Запрос.Выполнить().Выбрать();
						Если Выборка.Следующий() Тогда 
							ВывестиНашМакет(Выборка, ТабДокумент, Порядок, ВыборкаНоменклатура);
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			//////////////////////////////////////////////
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	Если не Обл = Неопределено Тогда 
		ТабДокумент.Вывести(Обл.ПолучитьОбласть(1, 1, Обл.ВысотаТаблицы, Обл.ШиринаТаблицы));
		Обл = Неопределено;
	КонецЕсли;
	Возврат ТабДокумент;
КонецФункции

Функция ЕслиОтложенныйТовар(ТабДокумент) Экспорт  
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", СсылкаНаОбъект);
	Запрос.Текст = ОтложенныйТоварЗапросШтрихкодов();
	Выгрузка = Запрос.Выполнить().Выгрузить();
	Порядок = ПорядокОбщий;
	Для каждого ВыборкаНоменклатура из Выгрузка Цикл		
		Отбор = Новый Структура;
		Отбор.Вставить("Номенклатура", ВыборкаНоменклатура.Номенклатура);
		//////////////////////////////////////////////
		// Возможность печатать этикетки для разного количества одинаковой номенклатуры
		
		//Отбор.Вставить("НомерСтроки", ВыборкаНоменклатура.НомерСтроки);
		Строка = КоличествоЭтикеток.НайтиСтроки(Отбор);
		//Если Строка.Количество()=1 Тогда
		Если Строка.Количество()>=1 Тогда
			
			Для нум=0 По Строка.Количество()-1 Цикл // добавил цикл
				
				//Если не Строка[0].КоличествоЭтикеток = 0 Тогда 
			Если не Строка[нум].КоличествоЭтикеток = 0 Тогда 
				
					//ВыборкаНоменклатура.Отложено = Строка[0].Количество;
					//Для i=1 по Строка[0].КоличествоЭтикеток Цикл 
				ВыборкаНоменклатура.Отложено = Строка[нум].Количество;
				Для i=1 по Строка[нум].КоличествоЭтикеток Цикл
					// код дальше без изменений...
					
					Порядок = Порядок + 1;
					Запрос = Новый Запрос;
					Запрос.УстановитьПараметр("Владелец", ВыборкаНоменклатура.Номенклатура);
					Запрос.Текст ="ВЫБРАТЬ
					              |	Номенклатура.Ссылка,
					              |	Штрихкоды.Штрихкод,
					              |	Штрихкоды.ТипШтрихкода
					              |ИЗ
					              |	Справочник.Номенклатура КАК Номенклатура
					              |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
					              |		ПО Номенклатура.Ссылка = Штрихкоды.Владелец
					              |ГДЕ
					              |	Номенклатура.Ссылка = &Владелец
					              |	И Штрихкоды.Штрихкод ЕСТЬ НЕ NULL ";

					Выборка = Запрос.Выполнить().Выбрать();
					Если Выборка.Количество()>1 Тогда ///1
						ВывестиОбщийМакет(Выборка, ТабДокумент, Порядок, ВыборкаНоменклатура);
					ИначеЕсли Выборка.Количество()=1 Тогда 
						Если Выборка.Следующий() Тогда   
							ТипКода = УправлениеРозничнойТорговлей.ПолучитьЗначениеТипаШтрихкодаДляЭУ(Выборка.ТипШтрихкода);
							Если ТипКода = 3 Тогда
								Изменения.ГенерацияНашихШтрихкодов(ВыборкаНоменклатура.Номенклатура);
								Выборка = Запрос.Выполнить().Выбрать();
								ВывестиОбщийМакет(Выборка, ТабДокумент, Порядок, ВыборкаНоменклатура);
							ИначеЕсли ТипКода = -1 и Выборка.ТипШтрихкода.Код = "00000000006" Тогда 
								ВывестиНашМакет(Выборка, ТабДокумент, Порядок, ВыборкаНоменклатура);
							КонецЕсли;
						КонецЕсли;
					Иначе
						Изменения.ГенерацияНашихШтрихкодов(ВыборкаНоменклатура.Номенклатура);
						Выборка = Запрос.Выполнить().Выбрать();
						Если Выборка.Следующий() Тогда 
							ВывестиНашМакет(Выборка, ТабДокумент, Порядок, ВыборкаНоменклатура);
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			//////////////////////////////////////////////
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	Если не Обл = Неопределено Тогда 
		ТабДокумент.Вывести(Обл.ПолучитьОбласть(1, 1, Обл.ВысотаТаблицы, Обл.ШиринаТаблицы));
		Обл = Неопределено;
	КонецЕсли;
	Возврат ТабДокумент;
КонецФункции

Функция ЕслиЗПС(ТабДокумент) Экспорт  
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", СсылкаНаОбъект);
	Запрос.Текст = "ВЫБРАТЬ
	               |	ПоступлениеТоваровУслугТовары.Номенклатура,
	               |	ПоступлениеТоваровУслугТовары.НомерСтроки КАК НомерСтроки,
	               |	ПоступлениеТоваровУслугТовары.Количество,
	               |	ПоступлениеТоваровУслугТовары.Ссылка.НомерЗаказа КАК НомерЗаказа,
	               |	ПоступлениеТоваровУслугТовары.Номенклатура.Артикул КАК Артикул,
	               |	ПоступлениеТоваровУслугТовары.Товар КАК Изделие,
	               |	ПоступлениеТоваровУслугТовары.Заказ КАК ЗаказНаш
	               |ПОМЕСТИТЬ ОкейИзделие
	               |ИЗ
	               |	Документ.ЗаказПоставщикуСборный.Товары КАК ПоступлениеТоваровУслугТовары
	               |ГДЕ
	               |	ПоступлениеТоваровУслугТовары.Ссылка = &Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОкейИзделие.Номенклатура,
	               |	ОкейИзделие.НомерСтроки,
	               |	ОкейИзделие.Количество,
	               |	ОкейИзделие.НомерЗаказа,
	               |	ОкейИзделие.Номенклатура.НаименованиеПолное КАК Артикул,
	               |	ЕСТЬNULL(ЗаказПокупателяТовары.Номенклатура.Артикул, """") КАК ИзделиеСчет,
	               |	ОкейИзделие.ЗаказНаш.Номер КАК Номер,
	               |	ОкейИзделие.ЗаказНаш
	               |ИЗ
	               |	ОкейИзделие КАК ОкейИзделие
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказПокупателя.Товары КАК ЗаказПокупателяТовары
	               |		ПО ОкейИзделие.ЗаказНаш = ЗаказПокупателяТовары.Ссылка
	               |			И ОкейИзделие.Изделие = ЗаказПокупателяТовары.Номенклатура";
	Выгрузка = Запрос.Выполнить().Выгрузить();
	
	Порядок = ПорядокОбщий;
	Для Каждого ВыборкаНоменклатура из Выгрузка Цикл		
		Отбор = Новый Структура;
		Отбор.Вставить("Номенклатура", ВыборкаНоменклатура.Номенклатура);
		//////////////////////////////////////////////
		// Возможность печатать этикетки для разного количества одинаковой номенклатуры
		
		//Отбор.Вставить("НомерСтроки", ВыборкаНоменклатура.НомерСтроки);
		Строка = КоличествоЭтикеток.НайтиСтроки(Отбор);
		//Если Строка.Количество()=1 Тогда
		Если Строка.Количество()>=1 Тогда
			
			Для нум=0 По Строка.Количество()-1 Цикл // добавил цикл
				
				//Если не Строка[0].КоличествоЭтикеток = 0 Тогда 
			Если не Строка[нум].КоличествоЭтикеток = 0 Тогда 
				
					//ВыборкаНоменклатура.Отложено = Строка[0].Количество;
					//Для i=1 по Строка[0].КоличествоЭтикеток Цикл 
				ВыборкаНоменклатура.Отложено = Строка[нум].Количество;
				Для i=1 по Строка[нум].КоличествоЭтикеток Цикл
					// код дальше без изменений... 
					Порядок = Порядок + 1;
					Запрос = Новый Запрос;
					Запрос.УстановитьПараметр("Владелец", ВыборкаНоменклатура.Номенклатура);
					Запрос.Текст ="ВЫБРАТЬ
					              |	Номенклатура.Ссылка,
					              |	Штрихкоды.Штрихкод,
					              |	Штрихкоды.ТипШтрихкода
					              |ИЗ
					              |	Справочник.Номенклатура КАК Номенклатура
					              |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
					              |		ПО Номенклатура.Ссылка = Штрихкоды.Владелец
					              |ГДЕ
					              |	Номенклатура.Ссылка = &Владелец
					              |	И Штрихкоды.Штрихкод ЕСТЬ НЕ NULL ";

					Выборка = Запрос.Выполнить().Выбрать();
					Если Выборка.Количество()>1 Тогда 
						ВывестиОбщийМакет(Выборка, ТабДокумент, Порядок, ВыборкаНоменклатура);
					ИначеЕсли Выборка.Количество()=1 Тогда 
						Если Выборка.Следующий() Тогда   
							ТипКода = УправлениеРозничнойТорговлей.ПолучитьЗначениеТипаШтрихкодаДляЭУ(Выборка.ТипШтрихкода);
							Если ТипКода = 3 Тогда
								Изменения.ГенерацияНашихШтрихкодов(ВыборкаНоменклатура.Номенклатура);
								Выборка = Запрос.Выполнить().Выбрать();
								ВывестиОбщийМакет(Выборка, ТабДокумент, Порядок, ВыборкаНоменклатура);
							ИначеЕсли ТипКода = -1 и Выборка.ТипШтрихкода.Код = "00000000006" Тогда 
								ВывестиНашМакет(Выборка, ТабДокумент, Порядок, ВыборкаНоменклатура);
							КонецЕсли;
						КонецЕсли;
					Иначе
						Изменения.ГенерацияНашихШтрихкодов(ВыборкаНоменклатура.Номенклатура);
						Выборка = Запрос.Выполнить().Выбрать();
						Если Выборка.Следующий() Тогда 
							ВывестиНашМакет(Выборка, ТабДокумент, Порядок, ВыборкаНоменклатура);
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			//////////////////////////////////////////////
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	Если не Обл = Неопределено Тогда 
		ТабДокумент.Вывести(Обл.ПолучитьОбласть(1, 1, Обл.ВысотаТаблицы, Обл.ШиринаТаблицы));
		Обл = Неопределено;
	КонецЕсли;
	Возврат ТабДокумент;
КонецФункции
#КонецОбласти

Функция ОтложенныйТоварЗапросШтрихкодов() Экспорт 
	Возврат "ВЫБРАТЬ
	        |	ВложенныйЗапрос.Номенклатура,
	        |	ВложенныйЗапрос.Отложено,
	        |	ВложенныйЗапрос.Номер,
	        |	ВложенныйЗапрос.Контрагент,
	        |	ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК Артикул,
	        |	ВложенныйЗапрос.НомерСтроки
	        |ИЗ
	        |	(ВЫБРАТЬ
	        |		ОтложенныйТоварМаршрут.Товар КАК Номенклатура,
	        |		ОтложенныйТоварМаршрут.КоличествоТовар КАК Отложено,
	        |		ОтложенныйТоварМаршрут.Заказ.Номер КАК Номер,
	        |		ОтложенныйТоварМаршрут.Заказ.Контрагент.Наименование КАК Контрагент,
	        |		ОтложенныйТоварМаршрут.Товар.Артикул КАК Артикул,
	        |		ОтложенныйТоварМаршрут.НомерСтроки КАК НомерСтроки
	        |	ИЗ
	        |		Документ.ОтложенныйТовар.Маршрут КАК ОтложенныйТоварМаршрут
	        |	ГДЕ
	        |		ОтложенныйТоварМаршрут.Ссылка = &Ссылка
	        |		И ОтложенныйТоварМаршрут.КоличествоТовар = ОтложенныйТоварМаршрут.Отложено
	        |		И НЕ ОтложенныйТоварМаршрут.КоличествоТовар = 0
	        |	
	        |	СГРУППИРОВАТЬ ПО
	        |		ОтложенныйТоварМаршрут.Товар,
	        |		ОтложенныйТоварМаршрут.КоличествоТовар,
	        |		ОтложенныйТоварМаршрут.Заказ.Номер,
	        |		ОтложенныйТоварМаршрут.Заказ.Контрагент.Наименование,
	        |		ОтложенныйТоварМаршрут.Товар.Артикул,
	        |		ОтложенныйТоварМаршрут.НомерСтроки
	        |	
	        |	ОБЪЕДИНИТЬ ВСЕ
	        |	
	        |	ВЫБРАТЬ
	        |		ОтложенныйТоварМаршрут.Товар,
	        |		ОтложенныйТоварМаршрут.КоличествоТовар,
	        |		ОтложенныйТоварМаршрут.Заказ.Номер,
	        |		ОтложенныйТоварМаршрут.Заказ.Контрагент.Наименование,
	        |		ОтложенныйТоварМаршрут.Товар.Артикул,
	        |		МИНИМУМ(ОтложенныйТоварМаршрут.НомерСтроки)
	        |	ИЗ
	        |		Документ.ОтложенныйТовар.Маршрут КАК ОтложенныйТоварМаршрут
	        |	ГДЕ
	        |		ОтложенныйТоварМаршрут.Ссылка = &Ссылка
	        |		И ОтложенныйТоварМаршрут.Количество2 = ОтложенныйТоварМаршрут.Отложено2
	        |		И НЕ ОтложенныйТоварМаршрут.Количество2 = 0
	        |	
	        |	СГРУППИРОВАТЬ ПО
	        |		ОтложенныйТоварМаршрут.Товар,
	        |		ОтложенныйТоварМаршрут.КоличествоТовар,
	        |		ОтложенныйТоварМаршрут.Заказ.Номер,
	        |		ОтложенныйТоварМаршрут.Заказ.Контрагент.Наименование,
	        |		ОтложенныйТоварМаршрут.Товар.Артикул) КАК ВложенныйЗапрос
	        |
	        |УПОРЯДОЧИТЬ ПО
	        |	ВложенныйЗапрос.НомерСтроки";
КонецФункции

Функция ПолучитьМестаХраненияВСтроке(Номенклатура) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	МестаХраненияНоменклатуры.МестоХранения
	               |ИЗ
	               |	РегистрСведений.МестаХраненияНоменклатуры КАК МестаХраненияНоменклатуры
	               |ГДЕ
	               |	МестаХраненияНоменклатуры.Номенклатура = &Номенклатура
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	МестаХраненияНоменклатуры.МестоХранения";
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Выборка = Запрос.Выполнить().Выбрать();
	Строка = "";
	Если не Выборка.Количество() = 0 Тогда  
		Пока Выборка.Следующий() Цикл 
			Строка = Строка+Выборка.МестоХранения+", ";
		КонецЦикла;
		Возврат Строка;
	Иначе 
		Возврат "";
	КонецЕсли;
	
КонецФункции

Процедура ПереводКареткиПечати(ТабДокумент, Выгрузка = Неопределено)
	
	ФормаПереводаКорретки = ПолучитьФорму("Форма1");
	Если не Выгрузка = Неопределено Тогда
		//Выгрузка = новый ТаблицаЗначений;
		КопияТЗ = Выгрузка.Скопировать(,"НомерСтроки, Номенклатура, Количество, КоличествоЭтикеток");
		ФормаПереводаКорретки.ЭлементыФормы.ТабличноеПоле1.Значение = КопияТЗ;
	КонецЕсли;
	ФормаПереводаКорретки.ОткрытьМодально();
	
	ПорядокОбщий = ?(Строка = 1,Колонка,(Строка-1)*3+Колонка);
	
	Порядок = 1;
	Пока не Порядок = ПорядокОбщий Цикл
		Структура = Расположение(Порядок);	
		Макет = ПолучитьМакет("_2"+Структура.ВысотаНаЛисте+Структура.Долгота);
		Область = Макет.ПолучитьОбласть("Обл");
		Если Структура.Долгота = 1 Тогда 
			Обл = новый ТабличныйДокумент;
			Обл.Присоединить(Область.ПолучитьОбласть(1, 1, Область.ВысотаТаблицы, Область.ШиринаТаблицы));
		ИначеЕсли Структура.Долгота = 2 Тогда
			Обл.Присоединить(Область.ПолучитьОбласть(1, 1, Область.ВысотаТаблицы, Область.ШиринаТаблицы));
		ИначеЕсли Структура.Долгота = 3 Тогда
			Обл.Присоединить(Область.ПолучитьОбласть(1, 1, Область.ВысотаТаблицы, Область.ШиринаТаблицы));
			ТабДокумент.Вывести(Обл.ПолучитьОбласть(1, 1, Обл.ВысотаТаблицы, Обл.ШиринаТаблицы));
			Обл = Неопределено;
		КонецЕсли;
		Порядок = Порядок+1;
	КонецЦикла;
	ПорядокОбщий = ПорядокОбщий-1;

КонецПроцедуры