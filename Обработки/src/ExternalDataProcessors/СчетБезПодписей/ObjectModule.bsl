Перем СсылкаНаОбъект Экспорт;
// Функция является точкой входа в данную обработку.
// Алгоритм заполнения печатной формы удобно размещать в отдельной(ых) функции(ях)
// Возвращаемое значение:
// Табличный документ - печатная форма накладной
//
Функция Печать() Экспорт
	
	//ТабДокумент = ПечатьДокумента();
	ТабДокумент = ПечатьСчетаБезПодписей();
	Возврат ТабДокумент;
	
КонецФункции // Печать

Функция ПечатьСчетаБезПодписей()
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб = Истина;
	Макет = ПолучитьМакет("ОтложенныйТовар");

	ОбластьМакета       = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Ссылка =  СсылкаНаОбъект.Ссылка;
	ОбластьМакета.Параметры.Контрагент =  СсылкаНаОбъект.Контрагент;
	ОбластьМакета.Параметры.Ответственный =  СсылкаНаОбъект.Ответственный;
	ОбластьМакета.Параметры.Комментарий =  СсылкаНаОбъект.Комментарий;
	ОбластьМакета.Параметры.Основание = СсылкаНаОбъект.ДокументОснование;
	Если СсылкаНаОбъект.Срочно Тогда 
		ОбластьМакета.Область("R1C13").Текст = "СРОЧНО";
		ОбластьМакета.Область("R1C13").ЦветТекста = Новый Цвет(255,255,255);
		ОбластьМакета.Область("R1C13").ЦветФона = Новый Цвет(0,0,0);
	КонецЕсли;
	ТабДокумент.Вывести(ОбластьМакета);
		
	НомерПоПорядку = 0;
	
	#Область Запрос1Товары
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	""Т"" КАК Товары,
		|	ОтложенныйТоварТовары.НомерСтроки КАК НомерСтроки1,
		|	ОтложенныйТоварТовары.Ссылка,
		|	ОтложенныйТоварТовары.Номенклатура,
		|	ОтложенныйТоварТовары.Количество КАК Отложитьконкретно,
		|	ВЫБОР
		|		КОГДА ОтложенныйТоварТовары.Ссылка.Проведен
		|			ТОГДА ОтложенныйТоварТовары.Количество
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Отложеноконкретно,
		|	ОтложенныйТоварТовары.Заказ,
		|	ЗаказыПокупателейОстаткиИОбороты.КоличествоПриход КАК КоличествоПоСчету,
		|	ЗаказыПокупателейОстаткиИОбороты.КоличествоРасход КАК Отгружено,
		|	ВложенныйЗапрос.МестоХранения,
		|	ОтложенныйТоварТовары.Комментарий
		|ИЗ
		|	Документ.ОтложенныйТовар.Товары КАК ОтложенныйТоварТовары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПокупателей.ОстаткиИОбороты КАК ЗаказыПокупателейОстаткиИОбороты
		|		ПО ОтложенныйТоварТовары.Заказ = ЗаказыПокупателейОстаткиИОбороты.ЗаказПокупателя
		|			И ОтложенныйТоварТовары.Номенклатура = ЗаказыПокупателейОстаткиИОбороты.Номенклатура
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			МестаХраненияНоменклатуры.Номенклатура КАК Номенклатура,
		|			МестаХраненияНоменклатуры.МестоХранения КАК МестоХранения
		|		ИЗ
		|			РегистрСведений.МестаХраненияНоменклатуры КАК МестаХраненияНоменклатуры
		|		ГДЕ
		|			МестаХраненияНоменклатуры.Приоритет = 0) КАК ВложенныйЗапрос
		|		ПО ОтложенныйТоварТовары.Номенклатура = ВложенныйЗапрос.Номенклатура
		|ГДЕ
		|	ОтложенныйТоварТовары.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", СсылкаНаОбъект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
////////////////////////////////////////////////
	ТЗТовары = РезультатЗапроса.Выгрузить();
	//ТЗвТабДок(ТЗТовары).Показать();
////////////////////////////////////////////////
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьТовар = Макет.ПолучитьОбласть("Строка");
		ОбластьКомплектация = Макет.ПолучитьОбласть("Строка1");
	    ОбластьМатериалы = Макет.ПолучитьОбласть("Строка2");
		ОбластьТовар.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		//
		ОбластьТовар.Параметры.НомерПозиции = ВыборкаДетальныеЗаписи.Товары+ВыборкаДетальныеЗаписи.НомерСтроки1;
		ОбластьТовар.Параметры.Заказ = ОбщегоНазначения.ПолучитьНомерНаПечать(ВыборкаДетальныеЗаписи.Заказ);
		НомерПоПорядку = НомерПоПорядку+1;
		ОбластьТовар.Параметры.НомерСтроки = НомерПоПорядку;
		ОбластьТовар.Параметры.Комплектация = НомераКомплектации(ВыборкаДетальныеЗаписи.Заказ, ВыборкаДетальныеЗаписи.Номенклатура);
		ТабДокумент.Вывести(ОбластьТовар);
	КонецЦикла;
	#КонецОбласти
	
	#Область Запрос2Материалы
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	""М"" КАК Материалы,
		|	ОтложенныйТоварМатериалы.НомерСтроки КАК НомерСтроки1,
		|	ОтложенныйТоварМатериалы.Ссылка,
		|	ОтложенныйТоварМатериалы.Товар,
		|	ОтложенныйТоварМатериалы.Номенклатура,
		|	ОтложенныйТоварМатериалы.Количество КАК Отложитьконкретно,
		|	ВЫБОР
		|		КОГДА ОтложенныйТоварМатериалы.Ссылка.Проведен
		|			ТОГДА ОтложенныйТоварМатериалы.Количество
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Отложеноконкретно,
		|	ОтложенныйТоварМатериалы.Заказ,
		|	ВложенныйЗапрос.МестоХранения
		|ИЗ
		|	Документ.ОтложенныйТовар.Материалы КАК ОтложенныйТоварМатериалы
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			МестаХраненияНоменклатуры.Номенклатура КАК Номенклатура,
		|			МестаХраненияНоменклатуры.МестоХранения КАК МестоХранения
		|		ИЗ
		|			РегистрСведений.МестаХраненияНоменклатуры КАК МестаХраненияНоменклатуры
		|		ГДЕ
		|			МестаХраненияНоменклатуры.Приоритет = 0) КАК ВложенныйЗапрос
		|		ПО ОтложенныйТоварМатериалы.Номенклатура = ВложенныйЗапрос.Номенклатура
		|ГДЕ
		|	ОтложенныйТоварМатериалы.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", СсылкаНаОбъект.Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОбластьТовар = Макет.ПолучитьОбласть("Строка");
		ОбластьКомплектация = Макет.ПолучитьОбласть("Строка1");
	    ОбластьМатериалы = Макет.ПолучитьОбласть("Строка2");
		НомерПоПорядку = НомерПоПорядку+1;
		ОбластьТовар.Параметры.НомерСтроки = НомерПоПорядку;
		ОбластьТовар.Параметры.Заполнить(ВыборкаДетальныеЗаписи);
		ОбластьТовар.Параметры.НомерПозиции = ВыборкаДетальныеЗаписи.Материалы+ВыборкаДетальныеЗаписи.НомерСтроки1;
		ОбластьТовар.Параметры.Комментарий = ВыборкаДетальныеЗаписи.Товар;
		ОбластьТовар.Параметры.Комплектация = НомераКомплектации(ВыборкаДетальныеЗаписи.Заказ, ВыборкаДетальныеЗаписи.Номенклатура);
		ОбластьТовар.Параметры.Заказ = ОбщегоНазначения.ПолучитьНомерНаПечать(ВыборкаДетальныеЗаписи.Заказ);
		ТабДокумент.Вывести(ОбластьТовар);
	КонецЦикла;	
	#КонецОбласти
////////////////////////////////////////////////
	ТЗКомплектующие = РезультатЗапроса.Выгрузить();
	Данные = ПолучитьДанныеВТЗ(ТЗТовары, ТЗКомплектующие);
	ЗаполнитьТабДок(Данные);
////////////////////////////////////////////////
	
	#Область Компектация
	КомплектацииЗапрос = Новый Запрос;
	КомплектацииЗапрос.Текст = 
		"ВЫБРАТЬ
		|	КомплектацияНоменклатуры.Ссылка
		|ИЗ
		|	Документ.КомплектацияНоменклатуры КАК КомплектацияНоменклатуры
		|ГДЕ
		|	КомплектацияНоменклатуры.ЗаказРезерв = &ЗаказРезерв
		|
		|УПОРЯДОЧИТЬ ПО
		|	КомплектацияНоменклатуры.ВидКомплектации УБЫВ";
	
	КомплектацииЗапрос.УстановитьПараметр("ЗаказРезерв", СсылкаНаОбъект.ДокументОснование);
	Комплектации = КомплектацииЗапрос.Выполнить().Выбрать();
	Пока Комплектации.Следующий() Цикл
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТекущийДокумент", Комплектации.Ссылка);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Номер,
		|	Дата,
		|	""Код:""        КАК ИмяКодАртикул,
		|	Номенклатура.Код КАК КодАртикул,
		|	ВЫРАЗИТЬ(Номенклатура.НаименованиеПолное КАК Строка(1000)) КАК Комплект,
		|	Номенклатура,
		|	ЕдиницаИзмерения,
		|	Количество,
		|	Ответственный,
		|	Организация
		|ИЗ
		|	Документ.КомплектацияНоменклатуры КАК КомплектацияНоменклатуры
		|
		|ГДЕ
		|	КомплектацияНоменклатуры.Ссылка = &ТекущийДокумент";
		Шапка = Запрос.Выполнить().Выбрать();
		Шапка.Следующий();
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.ТекстЗаголовка = ОбщегоНазначения.СформироватьЗаголовокДокумента(Шапка, ?(Комплектации.Ссылка.ВидКомплектации = Перечисления.ВидыКомплектации.Сборка, "Комплектация", "Разукомплектация")+" номенклатуры");
		ТабДокумент.Вывести(ОбластьМакета);
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Ссылка", Комплектации.Ссылка);
		Запрос.Текст ="ВЫБРАТЬ
		              |	КомплектацияНоменклатурыКомплектующие.Номенклатура.Код КАК КодАртикул,
		              |	ВЫРАЗИТЬ(КомплектацияНоменклатурыКомплектующие.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК Товар,
		              |	КомплектацияНоменклатурыКомплектующие.Номенклатура,
		              |	КомплектацияНоменклатурыКомплектующие.Количество,
		              |	КомплектацияНоменклатурыКомплектующие.ЕдиницаИзмерения,
		              |	КомплектацияНоменклатурыКомплектующие.НомерСтроки,
		              |	ВложенныйЗапрос.МестоХранения
		              |ИЗ
		              |	Документ.КомплектацияНоменклатуры.Комплектующие КАК КомплектацияНоменклатурыКомплектующие
		              |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		              |			МестаХраненияНоменклатуры.Номенклатура КАК Номенклатура,
		              |			МестаХраненияНоменклатуры.МестоХранения КАК МестоХранения
		              |		ИЗ
		              |			РегистрСведений.МестаХраненияНоменклатуры КАК МестаХраненияНоменклатуры
		              |		ГДЕ
		              |			МестаХраненияНоменклатуры.Приоритет = 0) КАК ВложенныйЗапрос
		              |		ПО КомплектацияНоменклатурыКомплектующие.Номенклатура = ВложенныйЗапрос.Номенклатура
		              |ГДЕ
		              |	КомплектацияНоменклатурыКомплектующие.Ссылка = &Ссылка
		              |
		              |УПОРЯДОЧИТЬ ПО
		              |	КомплектацияНоменклатурыКомплектующие.НомерСтроки";

		ЗапросКомплектующие = Запрос.Выполнить().Выгрузить();
		
		ОбластьМакета = Макет.ПолучитьОбласть("Комплект");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.Комплект           = СокрЛП(Шапка.Комплект);
		ОбластьМакета.Параметры.КоличествоНаПечать = "" + Шапка.Количество + " ("+Шапка.ЕдиницаИзмерения+")";
		ТабДокумент.Вывести(ОбластьМакета);
		ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабДокумент.Вывести(ОбластьМакета);
		Для каждого ВыборкаСтрокКомплектующие Из ЗапросКомплектующие Цикл
			Если НЕ ЗначениеЗаполнено(ВыборкаСтрокКомплектующие.Номенклатура) Тогда
				ОбщегоНазначения.СообщитьОбОшибке("В одной из строк не заполнено значение комплектующей - строка при печати пропущена.");
				Продолжить;
			КонецЕсли;
			ОбластьМакета = Макет.ПолучитьОбласть("СтрокаК");
			ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокКомплектующие);
			ОбластьМакета.Параметры.НомерСтроки = ЗапросКомплектующие.Индекс(ВыборкаСтрокКомплектующие) + 1;
			ОбластьМакета.Параметры.Товар       = СокрЛП(ВыборкаСтрокКомплектующие.Номенклатура);
			ОбластьМакета.Параметры.Комплектация = НомераКомплектации(СсылкаНаОбъект.ДокументОснование, ВыборкаСтрокКомплектующие.Номенклатура, Комплектации.Ссылка.Номер);
			ТабДокумент.Вывести(ОбластьМакета);
		КонецЦикла;
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ОбластьМакета.Параметры.ОтветственныйПредставление = "/"+ Шапка.Ответственный + "/";
		ТабДокумент.Вывести(ОбластьМакета);

	КонецЦикла;
	#КонецОбласти
								
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		
	Возврат ТабДокумент;

КонецФункции 

Функция НомераКомплектации(Заказ, Номенклатура, Кроме = Неопределено)
	Если ЗначениеЗаполнено(Заказ)и ЗначениеЗаполнено(Номенклатура) Тогда 
		ЗапросКомплектация = Новый Запрос;
		
		Если не Кроме = Неопределено Тогда 
			КромеТекст = "
				|ГДЕ
				|	НЕ ВложенныйЗапрос.Номер = &Номер";
			ЗапросКомплектация.УстановитьПараметр("Номер", Кроме);
		КонецЕсли;
		ЗапросКомплектация.Текст = 
			"ВЫБРАТЬ
			|	ВложенныйЗапрос.Номер
			|ИЗ
			|	(ВЫБРАТЬ
			|		ВЫБОР
			|			КОГДА ВложенныйЗапрос.Номер ЕСТЬ НЕ NULL 
			|				ТОГДА ВложенныйЗапрос.Номер
			|			ИНАЧЕ ВложенныйЗапрос1.Номер
			|		КОНЕЦ КАК Номер
			|	ИЗ
			|		(ВЫБРАТЬ
			|			КомплектацияНоменклатурыКомплектующие.Ссылка.Номер КАК Номер
			|		ИЗ
			|			Документ.КомплектацияНоменклатуры.Комплектующие КАК КомплектацияНоменклатурыКомплектующие
			|		ГДЕ
			|			КомплектацияНоменклатурыКомплектующие.Ссылка.ЗаказРезерв = &ЗаказРезерв
			|			И КомплектацияНоменклатурыКомплектующие.Номенклатура = &Номенклатура
			|		
			|		СГРУППИРОВАТЬ ПО
			|			КомплектацияНоменклатурыКомплектующие.Ссылка.Номер) КАК ВложенныйЗапрос
			|			ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|				КомплектацияНоменклатуры.Ссылка.Номер КАК Номер
			|			ИЗ
			|				Документ.КомплектацияНоменклатуры КАК КомплектацияНоменклатуры
			|			ГДЕ
			|				КомплектацияНоменклатуры.ЗаказРезерв = &ЗаказРезерв
			|				И КомплектацияНоменклатуры.Номенклатура = &Номенклатура
			|			
			|			СГРУППИРОВАТЬ ПО
			|				КомплектацияНоменклатуры.Ссылка.Номер) КАК ВложенныйЗапрос1
			|			ПО ВложенныйЗапрос.Номер = ВложенныйЗапрос1.Номер
			|	
			|	СГРУППИРОВАТЬ ПО
			|		ВЫБОР
			|			КОГДА ВложенныйЗапрос.Номер ЕСТЬ НЕ NULL 
			|				ТОГДА ВложенныйЗапрос.Номер
			|			ИНАЧЕ ВложенныйЗапрос1.Номер
			|		КОНЕЦ) КАК ВложенныйЗапрос"+КромеТекст;
		
		ЗапросКомплектация.УстановитьПараметр("ЗаказРезерв", Заказ);
		ЗапросКомплектация.УстановитьПараметр("Номенклатура", Номенклатура);
		Стр = "";
		ВыборкаКомплектация = ЗапросКомплектация.Выполнить().Выбрать();
		Если ВыборкаКомплектация.Следующий() Тогда 
			Стр = Формат(Число(Прав(ВыборкаКомплектация.Номер ,9)), "ЧГ=0");
			Если ВыборкаКомплектация.Количество() > 1 Тогда 
				Стр = Стр + ", ";
			КонецЕсли;
			Пока ВыборкаКомплектация.Следующий() Цикл
				Стр = Стр + Формат(Число(Прав(ВыборкаКомплектация.Номер ,9)), "ЧГ=0") + ", ";
			КонецЦикла;
			Если ВыборкаКомплектация.Количество() > 1 Тогда 
				Стр = Лев(Стр, СтрДлина(Стр)-2);
			КонецЕсли;
			Возврат Стр;
		Иначе
			Возврат "";
		КонецЕсли;
	Иначе 
		Возврат "";
	КонецЕсли;
КонецФункции

#Область ДопФункции

Функция ПолучитьДанныеВТЗ(ТЗТовары, ТЗКомплектующие)
	////////////////////////////////////////////////
	//ТЗвТабДок(ТЗТовары).Показать();
	//ТЗвТабДок(ТЗКомплектующие).Показать();
	////////////////////////////////////////////////
	
	#Область ОбщийСписок
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТЗ.Номенклатура,
		|	"""" КАК Товар,
		|	ТЗ.ОтложитьКонкретно,
		|	ТЗ.МестоХранения
		|ПОМЕСТИТЬ ВремТабИзделия
		|ИЗ
		|	&ТЗТовары КАК ТЗ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТЗ.Номенклатура,
		|	ТЗ.Товар,
		|	ТЗ.ОтложитьКонкретно,
		|	ТЗ.МестоХранения
		|ПОМЕСТИТЬ ВремТабНоменклатура
		|ИЗ
		|	&ТЗКомплектующие КАК ТЗ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВремТаб.Номенклатура,
		|	ВремТаб.Товар,
		|	ВремТаб.ОтложитьКонкретно,
		|	ВремТаб.МестоХранения
		|ПОМЕСТИТЬ ОбщийСписок
		|ИЗ
		|	ВремТабНоменклатура КАК ВремТаб
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВремТаб.Номенклатура,
		|	ВремТаб.Товар,
		|	ВремТаб.ОтложитьКонкретно,
		|	ВремТаб.МестоХранения
		|ИЗ
		|	ВремТабИзделия КАК ВремТаб
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбщийСписок.Номенклатура,
		|	ОбщийСписок.Товар,
		|	ОбщийСписок.ОтложитьКонкретно,
		|	ОбщийСписок.МестоХранения,
		|	ПорядокИКомплектность.ПорядокВыбора,
		|	ПорядокИКомплектность.ВКомплекте
		|ИЗ
		|	ОбщийСписок КАК ОбщийСписок
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			спр.Ссылка КАК Номенклатура,
		|			спр.ПорядокВыбора КАК ПорядокВыбора,
		|			спр.ВКомплекте КАК ВКомплекте
		|		ИЗ
		|			Справочник.Номенклатура КАК спр
		|		ГДЕ
		|			спр.Ссылка В
		|					(ВЫБРАТЬ
		|						ОбщийСписок.Номенклатура
		|					ИЗ
		|						ОбщийСписок)) КАК ПорядокИКомплектность
		|		ПО ОбщийСписок.Номенклатура = ПорядокИКомплектность.Номенклатура";
	Запрос.УстановитьПараметр("ТЗТовары", ТЗТовары);
	Запрос.УстановитьПараметр("ТЗКомплектующие", ТЗКомплектующие);
	#КонецОбласти
	
	ОбщийСписок = Запрос.Выполнить().Выгрузить();
	//ТЗвТабДок(ОбщийСписок).Показать();
	
	#Область ВсеДанные
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВремТаб.Номенклатура,
		|	ВремТаб.Товар,
		|	ВремТаб.ОтложитьКонкретно,
		|	ВремТаб.МестоХранения,
		|	ВремТаб.ПорядокВыбора,
		|	ВремТаб.ВКомплекте
		|ПОМЕСТИТЬ ВсяНоменклатураДокумента
		|ИЗ
		|	&ОбщийСписок КАК ВремТаб
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВсяНоменклатураДокумента.Номенклатура,
		|	ВсяНоменклатураДокумента.Товар,
		|	СУММА(ВсяНоменклатураДокумента.ОтложитьКонкретно) КАК ОтложитьКонкретно,
		|	ВсяНоменклатураДокумента.МестоХранения,
		|	ВсяНоменклатураДокумента.ПорядокВыбора
		|ИЗ
		|	ВсяНоменклатураДокумента КАК ВсяНоменклатураДокумента
		|ГДЕ
		|	ВсяНоменклатураДокумента.Товар = """"
		|	И ВсяНоменклатураДокумента.ВКомплекте = ЛОЖЬ
		|
		|СГРУППИРОВАТЬ ПО
		|	ВсяНоменклатураДокумента.Номенклатура,
		|	ВсяНоменклатураДокумента.Товар,
		|	ВсяНоменклатураДокумента.МестоХранения,
		|	ВсяНоменклатураДокумента.ПорядокВыбора
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВсяНоменклатураДокумента.Номенклатура,
		|	ВсяНоменклатураДокумента.Товар,
		|	СУММА(ВсяНоменклатураДокумента.ОтложитьКонкретно),
		|	ВсяНоменклатураДокумента.МестоХранения,
		|	ВсяНоменклатураДокумента.ПорядокВыбора
		|ИЗ
		|	ВсяНоменклатураДокумента КАК ВсяНоменклатураДокумента
		|ГДЕ
		|	ВсяНоменклатураДокумента.Товар = """"
		|	И ВсяНоменклатураДокумента.ВКомплекте = ИСТИНА
		|
		|СГРУППИРОВАТЬ ПО
		|	ВсяНоменклатураДокумента.Номенклатура,
		|	ВсяНоменклатураДокумента.Товар,
		|	ВсяНоменклатураДокумента.МестоХранения,
		|	ВсяНоменклатураДокумента.ПорядокВыбора
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВсяНоменклатураДокумента.Номенклатура,
		|	ВсяНоменклатураДокумента.Товар,
		|	СУММА(ВсяНоменклатураДокумента.ОтложитьКонкретно),
		|	ВсяНоменклатураДокумента.МестоХранения,
		|	ВсяНоменклатураДокумента.ПорядокВыбора
		|ИЗ
		|	ВсяНоменклатураДокумента КАК ВсяНоменклатураДокумента
		|ГДЕ
		|	НЕ ВсяНоменклатураДокумента.Товар = """"
		|	И ВсяНоменклатураДокумента.ВКомплекте = ЛОЖЬ
		|
		|СГРУППИРОВАТЬ ПО
		|	ВсяНоменклатураДокумента.Номенклатура,
		|	ВсяНоменклатураДокумента.Товар,
		|	ВсяНоменклатураДокумента.МестоХранения,
		|	ВсяНоменклатураДокумента.ПорядокВыбора
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВсяНоменклатураДокумента.Номенклатура,
		|	ВсяНоменклатураДокумента.Товар,
		|	ВсяНоменклатураДокумента.ОтложитьКонкретно,
		|	ВсяНоменклатураДокумента.МестоХранения,
		|	ВсяНоменклатураДокумента.ПорядокВыбора
		|ИЗ
		|	ВсяНоменклатураДокумента КАК ВсяНоменклатураДокумента
		|ГДЕ
		|	НЕ ВсяНоменклатураДокумента.Товар = """"
		|	И ВсяНоменклатураДокумента.ВКомплекте = ИСТИНА";
	Запрос.УстановитьПараметр("ОбщийСписок", ОбщийСписок);
	
	РезультатЗапроса = Запрос.Выполнить();
	#КонецОбласти
	
	ВсеДанные = РезультатЗапроса.Выгрузить();
	//ТЗвТабДок(ВсеДанные).Показать();// Возврат Неопределено;
	
	#Область ПараметрыТаблицыЗначений
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"), "Номенклатура");
	ТЗ.Колонки.Добавить("ОтложитьОбщее", Новый ОписаниеТипов("Число"), "ОтложитьОбщее");
	ТЗ.Колонки.Добавить("ОтложитьВсего", Новый ОписаниеТипов("Число"), "ОтложитьВсего");
	ТЗ.Колонки.Добавить("Комната", Новый ОписаниеТипов("Строка"), "Комната");
	ТЗ.Колонки.Добавить("МестоХранения", Новый ОписаниеТипов("Строка"), "МестоХранения");
	ТЗ.Колонки.Добавить("КоличествоПовторений", Новый ОписаниеТипов("Число"), "КоличествоПовторений");
	ТЗ.Колонки.Добавить("КомплектующиеДля", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"), "КомплектующиеДля");
	ТЗ.Колонки.Добавить("ПорядокВыбора", Новый ОписаниеТипов("Число"), "ПорядокВыбора");
	//ТЗ.Колонки.Добавить("ОтложитьКонкретно", Новый ОписаниеТипов("Число"), "ОтложитьКонкретно");
	ТЗ.Колонки.Добавить("ГотовКСборке", Новый ОписаниеТипов("Строка"), "ГотовКСборке");
	#КонецОбласти
	
	ИзделияСКомплектующими = Новый Структура;
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		строкаТЗ = ТЗ.Добавить();
		строкаТЗ.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
		строкаТЗ.ОтложитьОбщее = ВыборкаДетальныеЗаписи.ОтложитьКонкретно;
		строкаТЗ.Комната = КомнатаПоМесту(ВыборкаДетальныеЗаписи.МестоХранения);
		строкаТЗ.МестоХранения = ВыборкаДетальныеЗаписи.МестоХранения;
		строкаТЗ.ОтложитьВсего = ПосчитатьКоличества(ВыборкаДетальныеЗаписи.Номенклатура, ВыборкаДетальныеЗаписи.Товар, ВсеДанные);
		строкаТЗ.КоличествоПовторений = ПосчитатьПовторения(ВыборкаДетальныеЗаписи.Номенклатура, ВсеДанные);
		строкаТЗ.КомплектующиеДля = ВыборкаДетальныеЗаписи.Товар;
		строкаТЗ.ПорядокВыбора = ВыборкаДетальныеЗаписи.ПорядокВыбора;
		
		ОбъектСКомплектующими = ПолучитьОбъектСКомплектующими(ВыборкаДетальныеЗаписи.Товар, ТЗКомплектующие);
		Если НЕ ОбъектСКомплектующими = Неопределено Тогда ИзделияСКомплектующими.Вставить(КороткоеНаименование(ВыборкаДетальныеЗаписи.Товар), ОбъектСКомплектующими); КонецЕсли;
	КонецЦикла;
	
	//ТЗ.Сортировать("ПорядокВыбора ВОЗР, КомплектующиеДля ВОЗР"); ТЗвТабДок(ТЗ).Показать(); Возврат Неопределено;
	
	#Область ПорядокВыбораТовара
	Товары = Новый Массив;
	к=0.0001;
	Для каждого Стр Из ТЗ Цикл
		Товар = Стр.КомплектующиеДля;
		
		Если Товары.Найти(Товар)=Неопределено Тогда
			Товары.Добавить(Товар);
			
			ПорядокВыбора = ПолучитьПорядокВыбораДляТовара(Товар, ВсеДанные);
			Если ПорядокВыбора = Неопределено Тогда Продолжить; КонецЕсли;
			
			измСтр = ТЗ.НайтиСтроки(Новый Структура("КомплектующиеДля", Товар));
			ПорядокВыбора = ПорядокВыбора;// + к;
			
			Для н=0 по измСтр.ВГраница() Цикл
				измСтр[н].ПорядокВыбора = ПорядокВыбора;
			КонецЦикла;
			к=к+0.0001;
			
		КонецЕсли;
		
	КонецЦикла;
	#КонецОбласти
	//ТЗвТабДок(ТЗ).Показать();// Возврат Неопределено;
	ТЗ.Сортировать("ПорядокВыбора ВОЗР, КомплектующиеДля ВОЗР");
	
	#Область ЗаполнитьГотовКСборке
	Для каждого стр из ТЗ Цикл
		Товар = КороткоеНаименование(стр.КомплектующиеДля);
		Если Товар = "" Тогда Продолжить; КонецЕсли;
		
		ИзделияСКомплектующими[Товар].КоличествоКомплектующих = ИзделияСКомплектующими[Товар].КоличествоКомплектующих - 1;
		Если ИзделияСКомплектующими[Товар].Количество() - ИзделияСКомплектующими[Товар].КоличествоКомплектующих = ИзделияСКомплектующими[Товар].Количество() Тогда
			ГотовКСборке = 2;
		ИначеЕсли
			ИзделияСКомплектующими[Товар].Количество()-1 - ИзделияСКомплектующими[Товар].КоличествоКомплектующих >= 2 Тогда
			ГотовКСборке = 1;
		Иначе
			ГотовКСборке = "0";
		КонецЕсли;
		
		стр.ГотовКСборке = ГотовКСборке;
	КонецЦикла;
	#КонецОбласти
		
	//ТЗвТабДок(ТЗ).Показать();
	Возврат ТЗ;
КонецФункции

Функция ЗаполнитьТабДок(Данные)
	
	#Область ШапкаТабДок
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.АвтоМасштаб = Истина;
	Макет = ПолучитьМакет("Подбор_ОтложенныйТовар");

	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Ссылка =  СсылкаНаОбъект.Ссылка;
	ОбластьМакета.Параметры.Контрагент =  СсылкаНаОбъект.Контрагент;
	ОбластьМакета.Параметры.Ответственный =  СсылкаНаОбъект.Ответственный;
	ОбластьМакета.Параметры.Комментарий =  СсылкаНаОбъект.Комментарий;
	ОбластьМакета.Параметры.Основание = СсылкаНаОбъект.ДокументОснование;
	ТабДок.Вывести(ОбластьМакета);
	#КонецОбласти

	НомерСтроки = 0;
	Для каждого стр из Данные Цикл
		НомерСтроки = НомерСтроки + 1;			
		ОбластьНоменклатура = Макет.ПолучитьОбласть("Строка");
		ОбластьНоменклатура.Параметры.НомерСтроки = НомерСтроки;
		ОбластьНоменклатура.Параметры.Номенклатура = стр.Номенклатура;
		ОбластьНоменклатура.Параметры.ОтложитьОбщее = стр.ОтложитьОбщее;
		ОбластьНоменклатура.Параметры.ОтложитьВсего = стр.ОтложитьВсего;
		ОбластьНоменклатура.Параметры.Комната = стр.Комната;
		ОбластьНоменклатура.Параметры.МестоХранения = стр.МестоХранения;
		ОбластьНоменклатура.Параметры.КоличествоПовторений = стр.КоличествоПовторений;
		ОбластьНоменклатура.Параметры.КомплектующиеДля = стр.КомплектующиеДля;
		ОбластьНоменклатура.Параметры.ГотовКСборке = стр.ГотовКСборке;
		
		ТабДок.Вывести(ОбластьНоменклатура);
	КонецЦикла;

	ТабДок.Защита = Истина;
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.Показать();
	//Возврат ТабДок;
КонецФункции
/////////////////////////////////////////
Функция КомнатаПоМесту(место)
	поз = 0;
	поз=СтрНайти(место, "-",,,2);
	Возврат Лев(место, поз-1);
КонецФункции

Функция КороткоеНаименование(ПолноеНаименование)
	Если ПолноеНаименование = "" Тогда Возврат ""; КонецЕсли;
	СтрПолноеНаименование = СтрЗаменить(Строка(ПолноеНаименование), "-", "_");
	поз = ?(СтрНайти(СтрПолноеНаименование, ";") <> 0, СтрНайти(СтрПолноеНаименование, ";"), 16);
	Возврат Лев(СтрПолноеНаименование, поз-1);
КонецФункции

Функция ПолучитьОбъектСКомплектующими(Товар, ТаблицаДанных)
	Если Товар = Null ИЛИ Товар = "" ИЛИ Товар = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТЗ.Номенклатура,
		|	ТЗ.Товар
		|ПОМЕСТИТЬ ВремТаб
		|ИЗ
		|	&ТоварыИНоменклатура КАК ТЗ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВремТаб.Номенклатура
		|ИЗ
		|	ВремТаб КАК ВремТаб
		|ГДЕ
		|	ВремТаб.Товар = &Товар";
	Запрос.УстановитьПараметр("ТоварыИНоменклатура", ТаблицаДанных);
	Запрос.УстановитьПараметр("Товар", Товар);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	СписокКомплектующих = Новый Структура;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СписокКомплектующих.Вставить(КороткоеНаименование(ВыборкаДетальныеЗаписи.Номенклатура), ВыборкаДетальныеЗаписи.Номенклатура);
	КонецЦикла;
	
	СписокКомплектующих.Вставить("КоличествоКомплектующих", СписокКомплектующих.Количество());	
	Возврат СписокКомплектующих;

КонецФункции

Функция ПосчитатьПовторения(Номенклатура, ТаблицаДанных)
	// Возвращает количество повторений номенклатуры
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТД.Номенклатура
		|ПОМЕСТИТЬ ТаблицаДанных
		|ИЗ
		|	&ТаблицаДанных КАК ТД
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТД.Номенклатура
		|ИЗ
		|	ТаблицаДанных КАК ТД
		|ГДЕ
		|	ТД.Номенклатура = &Номенклатура";
	Запрос.УстановитьПараметр("ТаблицаДанных", ТаблицаДанных);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	Возврат РезультатЗапроса.Количество();

КонецФункции

Функция ПосчитатьКоличества(Номенклатура, Товар, ТаблицаДанных)
	// Возвращает количество повторений номенклатуры
	Если Строка(Товар) = "" Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТД.Номенклатура,
		|	ТД.Товар,
		|	ТД.ОтложитьКонкретно
		|ПОМЕСТИТЬ ТаблицаДанных
		|ИЗ
		|	&ТаблицаДанных КАК ТД
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТД.Номенклатура,
		|	СУММА(ТД.ОтложитьКонкретно) КАК Результат
		|ИЗ
		|	ТаблицаДанных КАК ТД
		|ГДЕ
		|	ТД.Номенклатура = &Номенклатура
		|	И ТД.Товар = """"
		|
		|СГРУППИРОВАТЬ ПО
		|	ТД.Номенклатура
		|
		|ИМЕЮЩИЕ
		|	СУММА(ТД.ОтложитьКонкретно) <> 0";
	Иначе
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТД.Номенклатура,
		|	ТД.Товар,
		|	ТД.ОтложитьКонкретно
		|ПОМЕСТИТЬ ТаблицаДанных
		|ИЗ
		|	&ТаблицаДанных КАК ТД
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТД.Номенклатура,
		|	СУММА(ТД.ОтложитьКонкретно) КАК Результат
		|ИЗ
		|	ТаблицаДанных КАК ТД
		|ГДЕ
		|	ТД.Номенклатура = &Номенклатура
		|	И НЕ ТД.Товар = """"
		|
		|СГРУППИРОВАТЬ ПО
		|	ТД.Номенклатура
		|
		|ИМЕЮЩИЕ
		|	СУММА(ТД.ОтложитьКонкретно) <> 0";
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ТаблицаДанных", ТаблицаДанных);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	Пока РезультатЗапроса.Следующий() Цикл
		Возврат РезультатЗапроса.Результат;
	КонецЦикла;

КонецФункции

Функция ПолучитьПорядокВыбораДляТовара(Товар, ТаблицаДанных)
	// возвращает ПорядокВыбора товара, как минимальный для его комплектующих
	ПорядокВыбора = Неопределено;
	Если Товар = "" ИЛИ Товар = Неопределено ИЛИ Товар = Null Тогда
		Возврат ПорядокВыбора;
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТЗ.Номенклатура,
		|	ТЗ.Товар
		|ПОМЕСТИТЬ ВремТаб
		|ИЗ
		|	&ТоварыИНоменклатура КАК ТЗ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВремТаб.Номенклатура,
		|	СпрНом.ПорядокВыбора,
		|	СпрНом.ВКомплекте
		|ИЗ
		|	ВремТаб КАК ВремТаб
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			Номенклатура.Ссылка КАК Ссылка,
		|			Номенклатура.ПорядокВыбора КАК ПорядокВыбора,
		|			Номенклатура.ВКомплекте КАК ВКомплекте
		|		ИЗ
		|			Справочник.Номенклатура КАК Номенклатура) КАК СпрНом
		|		ПО ВремТаб.Номенклатура = СпрНом.Ссылка
		|ГДЕ
		|	ВремТаб.Товар = &Товар
		|	И СпрНом.ВКомплекте = ИСТИНА";
	Запрос.УстановитьПараметр("ТоварыИНоменклатура", ТаблицаДанных);
	Запрос.УстановитьПараметр("Товар", Товар);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда Возврат ПорядокВыбора; КонецЕсли;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	ПорядокВыбора=999999999999999;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ПорядокВыбора = ?(ПорядокВыбора > ВыборкаДетальныеЗаписи.ПорядокВыбора, ВыборкаДетальныеЗаписи.ПорядокВыбора, ПорядокВыбора);
	КонецЦикла;
	Возврат ПорядокВыбора;
КонецФункции

// отладочная
Функция ТЗвТабДок(ТЗ)
	СхемаКомпоновкиДанных = Новый СхемаКомпоновкиДанных;
	ИсточникДанных = СхемаКомпоновкиДанных.ИсточникиДанных.Добавить();
	ИсточникДанных.Имя = "ИсточникДанных1";
	ИсточникДанных.ТипИсточникаДанных = "Local";
	
	ИмяНабора = "Основной";
	
	Результат = СхемаКомпоновкиДанных.НаборыДанных.Добавить(Тип("НаборДанныхОбъектСхемыКомпоновкиДанных"));
	Результат.Имя = ИмяНабора;
	Результат.ИсточникДанных = СхемаКомпоновкиДанных.ИсточникиДанных[0].Имя;
	Результат.ИмяОбъекта = ИмяНабора;
	
	
	Для Каждого ЭлементМетаданных Из тз.колонки Цикл
		ИмяПоля = ЭлементМетаданных.Имя;
		ЗаголовокПоля = ЭлементМетаданных.Заголовок;
		Поле = Результат.Поля.Добавить(Тип("ПолеНабораДанныхСхемыКомпоновкиДанных"));
		ПутьКДанным = ИмяПоля;
		Поле.Поле = ИмяПоля;
		Поле.Заголовок = ЗаголовокПоля;
		Поле.ТипЗначения = ЭлементМетаданных.ТипЗначения;
	конеццикла;
	
	КомпоновщикНастроек_ = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроек_.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
	Для Каждого Колонка Из ТЗ.Колонки Цикл
		ЭлементНастроек = КомпоновщикНастроек_.Настройки.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
		ЭлементНастроек.Поле = Новый ПолеКомпоновкиДанных(Колонка.Имя);
	КонецЦикла;


	Группировки = КомпоновщикНастроек_.Настройки.Структура;
	Группировка = Группировки.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
	Группировка.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
	Группировка.Порядок.Элементы.Добавить(Тип("АвтоЭлементПорядкаКомпоновкиДанных"));
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновкиДанных = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек_.ПолучитьНастройки());
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	мВнешниеНаборыДанных = Новый Структура("Основной", ТЗ);
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных, мВнешниеНаборыДанных);
	
	ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ТабДок = Новый ТабличныйДокумент;
	ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент.УстановитьДокумент(ТабДок);
	ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент.Вывести(ПроцессорКомпоновкиДанных);
	
	Возврат ТабДок;
КонецФункции

#КонецОбласти










